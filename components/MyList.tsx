import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { platform } from "os";
import styles from "../styles/Home.module.css";
import { useEffect, useState } from "react";
import Link from "next/link";
import { allChaging, userChger } from "@prisma/client";
import { useSession } from "next-auth/react";
import { json } from "stream/consumers";

interface ListProps {
  title?: String;
}

export default function MyList() {
  const { data: session, status } = useSession();
  const loading = status === "loading";
  const [myListStat, setMyListStat] = useState("");
  const [chgerList, setChgerList] = useState<userChger[]>([]);
  const chgChgerType = (type: String) => {
    switch (type) {
      case "01":
        return "DCÏ∞®Îç∞Î™®";
      case "02":
        return "ACÏôÑÏÜç";
      case "03":
        return "DCÏ∞®Îç∞Î™®+AC3ÏÉÅ";
      case "04":
        return "DCÏΩ§Î≥¥";
      case "05":
        return "DCÏ∞®Îç∞Î™®+DCÏΩ§Î≥¥";
      case "06":
        return "DCÏ∞®Îç∞Î™®+AC3ÏÉÅ+DCÏΩ§Î≥¥";
      case "07":
        return "AC3ÏÉÅ";
    }
  };
  const kind = (ele: String) => {
    switch (ele) {
      case "A0":
        return "Í≥µÍ≥µÏãúÏÑ§";
      case "B0":
        return "Ï£ºÏ∞®ÏãúÏÑ§";
      case "C0":
        return "Ìú¥Í≤åÏãúÏÑ§";
      case "D0":
        return "Í¥ÄÍ¥ëÏãúÏÑ§";
      case "E0":
        return "ÏÉÅÏóÖÏãúÏÑ§";
      case "F0":
        return "Ï∞®ÎüâÏ†ïÎπÑÏãúÏÑ§";
      case "G0":
        return "Í∏∞ÌÉÄÏãúÏÑ§";
      case "H0":
        return "Í≥µÎèôÏ£ºÌÉùÏãúÏÑ§";
      case "I0":
        return "Í∑ºÎ¶∞ÏÉùÌôúÏãúÏÑ§";
      case "J0":
        return "ÍµêÏú°Î¨∏ÌôîÏãúÏÑ§";
    }
  };

  const kindD = (ele: String) => {
    switch (ele) {
      case "A001":
        return "Í¥ÄÍ≥µÏÑú";
      case "A002":
        return "Ï£ºÎØºÏÑºÌÑ∞";
      case "A003":
        return "Í≥µÍ≥µÍ∏∞Í¥Ä";
      case "A004":
        return "ÏßÄÏûêÏ≤¥ÏãúÏÑ§";
      case "B001":
        return "Í≥µÏòÅÏ£ºÏ∞®Ïû•";
      case "B002":
        return "Í≥µÏõêÏ£ºÏ∞®Ïû•";
      case "B003":
        return "ÌôòÏäπÏ£ºÏ∞®Ïû•";
      case "B004":
        return "ÏùºÎ∞òÏ£ºÏ∞®Ïû•";
      case "C001":
        return "Í≥†ÏÜçÎèÑÎ°ú Ìú¥Í≤åÏÜå";
      case "C002":
        return "ÏßÄÎ∞©ÎèÑÎ°ú Ìú¥Í≤åÏÜå";
      case "C003":
        return "ÏâºÌÑ∞";
      case "D001":
        return "Í≥µÏõê";
      case "D002":
        return "Ï†ÑÏãúÍ¥Ä";
      case "D003":
        return "ÎØºÏÜçÎßàÏùÑ";
      case "D004":
        return "ÏÉùÌÉúÍ≥µÏõê";
      case "D005":
        return "ÌôçÎ≥¥Í¥Ä";
      case "D006":
        return "Í¥ÄÍ¥ëÏïàÎÇ¥ÏÜå";
      case "D007":
        return "Í¥ÄÍ¥ëÏßÄ";
      case "D008":
        return "Î∞ïÎ¨ºÍ¥Ä";
      case "D009":
        return "Ïú†Ï†ÅÏßÄ";
      case "E001":
        return "ÎßàÌä∏(ÏáºÌïëÎ™∞)";
      case "E002":
        return "Î∞±ÌôîÏ†ê";
      case "E003":
        return "ÏàôÎ∞ïÏãúÏÑ§";
      case "E004":
        return "Í≥®ÌîÑÏû•(cc)";
      case "E005":
        return "Ïπ¥Ìéò";
      case "E006":
        return "ÏùåÏãùÏ†ê";
      case "E007":
        return "Ï£ºÏú†ÏÜå";
      case "E008":
        return "ÏòÅÌôîÍ¥Ä";
      case "F001":
        return "ÏÑúÎπÑÏä§ÏÑºÌÑ∞";
      case "F002":
        return "Ï†ïÎπÑÏÜå";
      case "G001":
        return "Íµ∞Î∂ÄÎåÄ";
      case "G002":
        return "ÏïºÏòÅÏû•";
      case "G003":
        return "Í≥µÏ§ëÏ†ÑÌôîÎ∂ÄÏä§";
      case "G004":
        return "Í∏∞ÌÉÄ";
      case "G005":
        return "Ïò§ÌîºÏä§ÌÖî";
      case "G006":
        return "Îã®ÎèÖÏ£ºÌÉù";
      case "H001":
        return "ÏïÑÌååÌä∏";
      case "H002":
        return "ÎπåÎùº";
      case "H003":
        return "ÏÇ¨ÏóÖÏû•(ÏÇ¨Ïò•)";
      case "H004":
        return "Í∏∞ÏàôÏÇ¨";
      case "H005":
        return "Ïó∞Î¶ΩÏ£ºÌÉù";
      case "I001":
        return "Î≥ëÏõê";
      case "I002":
        return "Ï¢ÖÍµêÏãúÏÑ§";
      case "I003":
        return "Î≥¥Í±¥ÏÜå";
      case "I004":
        return "Í≤ΩÏ∞∞ÏÑú";
      case "I005":
        return "ÎèÑÏÑúÍ¥Ä";
      case "I006":
        return "Î≥µÏßÄÍ¥Ä";
      case "I007":
        return "ÏàòÎ†®Ïõê";
      case "I008":
        return "Í∏àÏúµÍ∏∞Í¥Ä";
      case "J001":
        return "ÌïôÍµê";
      case "J002":
        return "ÍµêÏú°Ïõê";
      case "J003":
        return "ÌïôÏõê";
      case "J004":
        return "Í≥µÏó∞Ïû•";
      case "J005":
        return "Í¥ÄÎûåÏû•";
      case "J006":
        return "ÎèôÏãùÎ¨ºÏõê";
      case "J007":
        return "Í≤ΩÍ∏∞Ïû•";
    }
  };
  const chgLimitYn = (limit: String) => {
    if (limit === "Y") return "Ï∂©Ï†ÑÏù¥Ïö© Ï†úÌïú !";
    else return "Ïù¥Ïö©Ï†úÌïú ÏóÜÏùå";
  };
  // (1 ÌÜµÏã†Ïù¥ÏÉÅ 2Ï∂©Ï†ÑÎåÄÍ∏∞ 3Ï∂©Ï†ÑÏ§ë 4Ïö¥ÏòÅÏ§ëÏßÄ 5Ï†êÍ≤ÄÏ§ë 9ÏÉÅÌÉúÎØ∏ÌôïÏù∏)
  const stat = (ele: String) => {
    switch (ele) {
      case "1":
        return "ÌÜµÏã†Ïù¥ÏÉÅ üî¥";
      case "2":
        return "Ï∂©Ï†ÑÎåÄÍ∏∞ üü¢";
      case "3":
        return "Ï∂©Ï†ÑÏ§ë üîµ";
      case "4":
        return "Ïö¥ÏòÅÏ§ëÏßÄ ‚ö´Ô∏è";
      case "5":
        return "Ï†êÍ≤ÄÏ§ë üî¥";
      case "9":
        return "ÏÉÅÌÉúÎØ∏ÌôïÏù∏ üü†";
    }
  };

  const date = (ele: String) => {
    if (ele === "") {
      return "Ï†ïÎ≥¥ ÏóÜÏùå";
    }

    const year = ele.substring(0, 4);
    const month = ele.substring(4, 6);
    const day = ele.substring(6, 8);
    const hour = ele.substring(8, 10);
    const minute = ele.substring(10, 12);
    const second = ele.substring(12, 14);

    return year + "ÎÖÑ" + month + "Ïõî" + day + "Ïùº";
  };

  const time = (ele: String) => {
    if (ele === "") {
      return "";
    }
    const hour = ele.substring(8, 10);
    const minute = ele.substring(10, 12);
    const second = ele.substring(12, 14);

    return hour + " : " + minute + " : " + second;
  };

  useEffect(() => {
    Ï¶êÏ∞æÏÉàÎ°úÍ≥†Ïπ®();
  }, []);

  const Ï¶êÏ∞æÏÉàÎ°úÍ≥†Ïπ® = () => {
    fetch("api/user/getMyList", {
      method: "POST",
      body: JSON.stringify(session?.user?.email),
    })
      .then(res => res.json())
      .then(json => {
        console.log(json);
        setChgerList(json.userChagData);
      })
      .then(() => {
        console.log(chgerList);
      });
  };

  return (
    <div className="w-11/12 bg-gradient-to-tr bg-sky-300 from-indigo-200 transition rounded-xl">
      <button className="absolute right-5 text-2xl" onClick={Ï¶êÏ∞æÏÉàÎ°úÍ≥†Ïπ®}>
        üç•
      </button>
      <div>
        {chgerList.map((ele: any, idx: any) => (
          <div key={idx} className="w-full py-2">
            <div className="flex justify-center text-xl font-bold items-center">
              {ele.userStatNm}
            </div>
            <div className="text-sm flex justify-center items-center">
              {ele.userAddr}
            </div>
            <div className="flex justify-around items-center">
              <div className="transition rounded-xl bg-slate-100 px-2 text-sm font-bold border border-sky-600">
                {chgChgerType(ele.userChgerType)}
              </div>
              <div className="flex justify-center">{stat(ele.userStat)}</div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
